#ifndef EXECUTE_UTILS_H
#define EXECUTE_UTILS_H

#include "sys/types.h"
#include <stdbool.h>

/**
 * @brief Waits for all processes with the given IDs.
 *
 * @param has_to_wait Indicates whether to wait for the child processes.
 * @param pids IDs of the processes to wait for.
 * @param num_pids Number of processes to wait for.
 */
void wait_pids(bool has_to_wait, pid_t *pids, size_t num_pids);


/**
 * @brief Generates an array of pipes.
 *
 * @param command_count The number of simple commands in the command to be executed.
 * @return int** Returns the array of pipes.
 */
int **generate_pipes(size_t command_count);


/**
 * @brief Frees the memory of pipes generated by generate_pipes.
 *
 * @param pipe_manager Array of pipes.
 * @param command_count Number of commands within the pipes.
 */
void free_pipes(int **pipe_manager, size_t command_count);


/**
 * @brief open redir and dup to standar put.
 * 
 * @param cmd command with redirections.
 */
void file_descriptor(scommand cmd);


/**
 * @brief Close pipe's endpoints
 * 
 * @param apipe pipe to close.
 */
void pipe_closer(int apipe[2]);

/**
 * @brief open redirections of pipes.
 * 
 * @param last_pipe The pipe that preced the command. NULL if the pipe doesn't exist
 * @param next_pipe the pipe that comes after the command. NULL if the pipe doesn't exist.
 */
void pipe_descriptor(int last_pipe[2], int next_pipe[2]);

/**
 * @brief Get the args object
 * 
 * @param cmd command to get args
 * @return char ** array of stringifyied args
 */
char ** get_args(scommand cmd);

#endif 